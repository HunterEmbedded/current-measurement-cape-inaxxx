From f8b26e39777e40ffc934493d48f6ba38479edb3a Mon Sep 17 00:00:00 2001
From: Iain Hunter <iain@hunterembedded.co.uk>
Date: Fri, 3 Sep 2021 09:58:03 -0400
Subject: [PATCH 5/6] add extra logging

---
 drivers/iio/adc/ina2xx-adc.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/drivers/iio/adc/ina2xx-adc.c b/drivers/iio/adc/ina2xx-adc.c
index c1ab3b594..3907961da 100644
--- a/drivers/iio/adc/ina2xx-adc.c
+++ b/drivers/iio/adc/ina2xx-adc.c
@@ -20,6 +20,9 @@
  * Configurable 7-bit I2C slave address from 0x40 to 0x4F
  */
 
+#define DEBUG
+
+
 #include <linux/delay.h>
 #include <linux/i2c.h>
 #include <linux/iio/iio.h>
@@ -488,6 +491,7 @@ static int ina2xx_write_raw(struct iio_dev *indio_dev,
 	if (ret)
 		goto err;
 
+	printk(KERN_DEBUG "ina2xx_write_raw(%d) config %04x\n",mask,config);
 	tmp = config;
 
 	switch (mask) {
@@ -568,12 +572,15 @@ static ssize_t ina2xx_allow_async_readout_store(struct device *dev,
  */
 static int ina2xx_set_calibration(struct ina2xx_chip_info *chip)
 {
+
+	printk(KERN_DEBUG "%s() value %04x\n", __FUNCTION__,chip->config->calibration_value);
 	return regmap_write(chip->regmap, INA2XX_CALIBRATION,
 			    chip->config->calibration_value);
 }
 
 static int set_shunt_resistor(struct ina2xx_chip_info *chip, unsigned int val)
 {
+	printk(KERN_DEBUG "%s() value %04x\n", __FUNCTION__, val);
 	if (val == 0 || val > INT_MAX)
 		return -EINVAL;
 
@@ -851,6 +858,16 @@ static int ina2xx_buffer_enable(struct iio_dev *indio_dev)
 	dev_dbg(&indio_dev->dev, "Async readout mode: %d\n",
 		chip->allow_async_readout);
 
+	// For debug read out all the registers
+	{	unsigned int regVal;
+
+		regmap_read(chip->regmap, INA2XX_CONFIG, &regVal);
+		printk(KERN_DEBUG "config reg %04x\n",regVal);		
+
+		regmap_read(chip->regmap, INA2XX_CALIBRATION, &regVal);
+		printk(KERN_DEBUG "calib  reg %04x\n",regVal);		
+
+	}
 	task = kthread_create(ina2xx_capture_thread, (void *)indio_dev,
 			      "%s:%d-%uus", indio_dev->name, indio_dev->id,
 			      sampling_us);
@@ -950,6 +967,12 @@ static const struct iio_info ina226_info = {
 /* Initialize the configuration and calibration registers. */
 static int ina2xx_init(struct ina2xx_chip_info *chip, unsigned int config)
 {
+	unsigned int configReg;
+	
+	regmap_read(chip->regmap, INA2XX_CONFIG, &configReg);
+	printk(KERN_DEBUG "ina2xx_init() config %04x\n", configReg);
+
+
 	int ret = regmap_write(chip->regmap, INA2XX_CONFIG, config);
 	if (ret)
 		return ret;
@@ -1020,6 +1043,7 @@ static int ina2xx_probe(struct i2c_client *client,
 		ina219_set_vshunt_pga_gain(chip, INA219_DEFAULT_PGA, &val);
 	}
 
+	printk(KERN_DEBUG "%s() config now set to %04x\n", __FUNCTION__, val);
 	ret = ina2xx_init(chip, val);
 	if (ret) {
 		dev_err(&client->dev, "error configuring the device\n");
-- 
2.17.1

