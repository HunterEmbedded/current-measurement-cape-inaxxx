From baa11defd52cdd92651a9122c0c13687e80c404c Mon Sep 17 00:00:00 2001
From: Iain Hunter <iain@hunterembedded.co.uk>
Date: Mon, 13 Sep 2021 07:16:57 -0400
Subject: [PATCH 6/6] add support for maximum current to measure to ina2xx and
 remove debug printks

---
 .../devicetree/bindings/hwmon/ina2xx.txt      |  4 +
 Documentation/hwmon/ina2xx.rst                |  9 ++-
 .../arm/boot/dts/am335x-boneblack-common.dtsi |  4 +
 drivers/iio/adc/ina2xx-adc.c                  | 77 +++++++++++++------
 include/linux/platform_data/ina2xx.h          |  4 +-
 5 files changed, 71 insertions(+), 27 deletions(-)

diff --git a/Documentation/devicetree/bindings/hwmon/ina2xx.txt b/Documentation/devicetree/bindings/hwmon/ina2xx.txt
index 02af0d94e..b90dec0e7 100644
--- a/Documentation/devicetree/bindings/hwmon/ina2xx.txt
+++ b/Documentation/devicetree/bindings/hwmon/ina2xx.txt
@@ -15,10 +15,14 @@ Optional properties:
 - shunt-resistor
 	Shunt resistor value in micro-Ohm
 
+- maximum-current
+	Maximum current to be measured value in milliamp
+
 Example:
 
 ina220@44 {
 	compatible = "ti,ina220";
 	reg = <0x44>;
 	shunt-resistor = <1000>;
+	maximum-current = <1000>;
 };
diff --git a/Documentation/hwmon/ina2xx.rst b/Documentation/hwmon/ina2xx.rst
index 94b9a260c..d8c2cbe16 100644
--- a/Documentation/hwmon/ina2xx.rst
+++ b/Documentation/hwmon/ina2xx.rst
@@ -72,10 +72,11 @@ INA230 and INA231 are high or low side current shunt and power monitors
 with an I2C interface. The chips monitor both a shunt voltage drop and
 bus supply voltage.
 
-The shunt value in micro-ohms can be set via platform data or device tree at
-compile-time or via the shunt_resistor attribute in sysfs at run-time. Please
-refer to the Documentation/devicetree/bindings/hwmon/ina2xx.txt for bindings
-if the device tree is used.
+The shunt value in micro-ohms as well as the maximum current to be measured
+can be set via platform data or device tree at compile-time or via the 
+shunt_resistor attribute in sysfs at run-time. Please refer to the 
+Documentation/devicetree/bindings/hwmon/ina2xx.txt for bindings if the device 
+tree is used.
 
 Additionally ina226 supports update_interval attribute as described in
 Documentation/hwmon/sysfs-interface.rst. Internally the interval is the sum of
diff --git a/arch/arm/boot/dts/am335x-boneblack-common.dtsi b/arch/arm/boot/dts/am335x-boneblack-common.dtsi
index f85cd5209..6565e5b90 100644
--- a/arch/arm/boot/dts/am335x-boneblack-common.dtsi
+++ b/arch/arm/boot/dts/am335x-boneblack-common.dtsi
@@ -146,6 +146,8 @@
 	reg = <0x40>;
 	/* 3.3ohm fitted */ 
 	shunt-resistor = <3300000>;
+	/* max current 100mA */ 
+	maximum-current = <100>;
 	};
 };
 
@@ -156,6 +158,8 @@
 	reg = <0x40>;
 	/* 0.33ohm fitted */ 
 	shunt-resistor = <330000>;
+	/* max current 1000mA */ 
+	maximum-current = <1000>;
 	};
 };
 
diff --git a/drivers/iio/adc/ina2xx-adc.c b/drivers/iio/adc/ina2xx-adc.c
index 3907961da..5df3489a8 100644
--- a/drivers/iio/adc/ina2xx-adc.c
+++ b/drivers/iio/adc/ina2xx-adc.c
@@ -62,6 +62,8 @@
 
 #define INA2XX_RSHUNT_DEFAULT           10000
 
+#define INA2XX_MAX_CURRENT_MA		10000
+
 /*
  * bit masks for reading the settings in the configuration register
  * FIXME: use regmap_fields.
@@ -143,6 +145,7 @@ struct ina2xx_chip_info {
 	const struct ina2xx_config *config;
 	struct mutex state_lock;
 	unsigned int shunt_resistor_uohm;
+	unsigned int maximum_current_ma;
 	int avg;
 	int int_time_vbus; /* Bus voltage integration time uS */
 	int int_time_vshunt; /* Shunt voltage integration time uS */
@@ -491,7 +494,6 @@ static int ina2xx_write_raw(struct iio_dev *indio_dev,
 	if (ret)
 		goto err;
 
-	printk(KERN_DEBUG "ina2xx_write_raw(%d) config %04x\n",mask,config);
 	tmp = config;
 
 	switch (mask) {
@@ -569,18 +571,35 @@ static ssize_t ina2xx_allow_async_readout_store(struct device *dev,
  * According to datasheet (INA 226: eq. 3, INA219: eq. 4) the best values
  * are 2048 for ina226 and 4096 for ina219. They are hardcoded as
  * calibration_value.
+ * If maximum_current_ma is not default then calculate the best
+ * calibration value to use for that current instead of the default
+ * using the same equations from datasheet. Equations are manipulated
+ * to be based on the variable values of max current and shunt resistance
+ * convert uohm to milliohm to keep within 32 bit range
  */
 static int ina2xx_set_calibration(struct ina2xx_chip_info *chip)
 {
+	unsigned int calibration_value;
+
+	if (chip->maximum_current_ma != INA2XX_MAX_CURRENT_MA){
+		
+		if (chip->config->chip_id == ina226){
+			calibration_value = (167 * 1000 * 1000 ) / 
+					(chip->maximum_current_ma * (chip->shunt_resistor_uohm / 1000));
+		}else{
+			calibration_value = (1342 * 1000 * 1000 ) / 
+					(chip->maximum_current_ma * (chip->shunt_resistor_uohm / 1000));
+		}
+	}else{
+		calibration_value = chip->config->calibration_value;
+	}
 
-	printk(KERN_DEBUG "%s() value %04x\n", __FUNCTION__,chip->config->calibration_value);
 	return regmap_write(chip->regmap, INA2XX_CALIBRATION,
-			    chip->config->calibration_value);
+				    calibration_value);
 }
 
 static int set_shunt_resistor(struct ina2xx_chip_info *chip, unsigned int val)
 {
-	printk(KERN_DEBUG "%s() value %04x\n", __FUNCTION__, val);
 	if (val == 0 || val > INT_MAX)
 		return -EINVAL;
 
@@ -589,6 +608,16 @@ static int set_shunt_resistor(struct ina2xx_chip_info *chip, unsigned int val)
 	return 0;
 }
 
+static int set_maximum_current(struct ina2xx_chip_info *chip, unsigned int val)
+{
+	if (val == 0 || val > INT_MAX)
+		return -EINVAL;
+
+	chip->maximum_current_ma = val;
+
+	return 0;
+}
+
 static ssize_t ina2xx_shunt_resistor_show(struct device *dev,
 					  struct device_attribute *attr,
 					  char *buf)
@@ -858,16 +887,6 @@ static int ina2xx_buffer_enable(struct iio_dev *indio_dev)
 	dev_dbg(&indio_dev->dev, "Async readout mode: %d\n",
 		chip->allow_async_readout);
 
-	// For debug read out all the registers
-	{	unsigned int regVal;
-
-		regmap_read(chip->regmap, INA2XX_CONFIG, &regVal);
-		printk(KERN_DEBUG "config reg %04x\n",regVal);		
-
-		regmap_read(chip->regmap, INA2XX_CALIBRATION, &regVal);
-		printk(KERN_DEBUG "calib  reg %04x\n",regVal);		
-
-	}
 	task = kthread_create(ina2xx_capture_thread, (void *)indio_dev,
 			      "%s:%d-%uus", indio_dev->name, indio_dev->id,
 			      sampling_us);
@@ -970,8 +989,6 @@ static int ina2xx_init(struct ina2xx_chip_info *chip, unsigned int config)
 	unsigned int configReg;
 	
 	regmap_read(chip->regmap, INA2XX_CONFIG, &configReg);
-	printk(KERN_DEBUG "ina2xx_init() config %04x\n", configReg);
-
 
 	int ret = regmap_write(chip->regmap, INA2XX_CONFIG, config);
 	if (ret)
@@ -986,7 +1003,7 @@ static int ina2xx_probe(struct i2c_client *client,
 	struct ina2xx_chip_info *chip;
 	struct iio_dev *indio_dev;
 	struct iio_buffer *buffer;
-	unsigned int val;
+	unsigned int val, max_current_ma, shunt_uohms;
 	enum ina2xx_ids type;
 	int ret;
 
@@ -1014,19 +1031,36 @@ static int ina2xx_probe(struct i2c_client *client,
 	mutex_init(&chip->state_lock);
 
 	if (of_property_read_u32(client->dev.of_node,
-				 "shunt-resistor", &val) < 0) {
+				 "shunt-resistor", &shunt_uohms) < 0) {
+		struct ina2xx_platform_data *pdata =
+		    dev_get_platdata(&client->dev);
+
+		if (pdata)
+			shunt_uohms = pdata->shunt_uohms;
+		else
+			shunt_uohms = INA2XX_RSHUNT_DEFAULT;
+	}
+
+	ret = set_shunt_resistor(chip, shunt_uohms);
+	if (ret)
+		return ret;
+
+
+	if (of_property_read_u32(client->dev.of_node,
+				 "maximum-current", &max_current_ma) < 0) {
 		struct ina2xx_platform_data *pdata =
 		    dev_get_platdata(&client->dev);
 
 		if (pdata)
-			val = pdata->shunt_uohms;
+			max_current_ma = pdata->max_measured_current_ma;
 		else
-			val = INA2XX_RSHUNT_DEFAULT;
+			max_current_ma = INA2XX_MAX_CURRENT_MA;
 	}
 
-	ret = set_shunt_resistor(chip, val);
+	ret = set_maximum_current(chip, max_current_ma);
 	if (ret)
 		return ret;
+	
 
 	/* Patch the current config register with default. */
 	val = chip->config->config_default;
@@ -1043,7 +1077,6 @@ static int ina2xx_probe(struct i2c_client *client,
 		ina219_set_vshunt_pga_gain(chip, INA219_DEFAULT_PGA, &val);
 	}
 
-	printk(KERN_DEBUG "%s() config now set to %04x\n", __FUNCTION__, val);
 	ret = ina2xx_init(chip, val);
 	if (ret) {
 		dev_err(&client->dev, "error configuring the device\n");
diff --git a/include/linux/platform_data/ina2xx.h b/include/linux/platform_data/ina2xx.h
index 2aa5ee9a9..3e65f8b28 100644
--- a/include/linux/platform_data/ina2xx.h
+++ b/include/linux/platform_data/ina2xx.h
@@ -9,8 +9,10 @@
 
 /**
  * struct ina2xx_platform_data - ina2xx info
- * @shunt_uohms		shunt resistance in microohms
+ * @shunt_uohms			shunt resistance in microohms
+ * @max_measured_current_ma	maximum current to be measured across shunt
  */
 struct ina2xx_platform_data {
 	long shunt_uohms;
+	long max_measured_current_ma;
 };
-- 
2.17.1

